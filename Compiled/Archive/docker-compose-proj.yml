version: "3.9"
networks:
  proj-net:
    driver: bridge
services:
  #################################  
  # MySQL
  #################################
  project-mysql:
      platform: linux/amd64
      image: mysql:latest
      # maybe image: mysql
      restart: always
      command: --default-authentication-plugin=mysql_native_password
      environment:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: mydb
          MYSQL_USER: user
          MYSQL_PASSWORD: user
      volumes: 
          - ./init/Invent_Cart.sql:/docker-entrypoint-initdb.d/Invent_Cart.sql
          - ./init/sellers.sql:/docker-entrypoint-initdb.d/sellers.sql
          - ./init/order.sql:/docker-entrypoint-initdb.d/order.sql
          - ./init/customers.sql:/docker-entrypoint-initdb.d/customers.sql
      ports:
        - 3306:3306
      networks:
        - proj-net
  #################################
  # Seller: The seller microservice Python
  #################################
  seller:
    build:
        context: ./
        dockerfile: seller.Dockerfile
    image: jialequek2020/seller:1.0
    depends_on:
      - project-mysql
    environment:
      DATABASE_HOST: project-mysql
      DATABASE_USER: user
      DATABASE_PASSWORD: user
      DATABASE_NAME: sellers
      DATABASE_PORT: 3306
      dbURL: mysql+mysqlconnector://user:user@project-mysql:3306/sellers
      sellerURL: http://seller:9191/sellers
    ports:
      - 9191:5100
    networks:
      - proj-net
  #################################
  # Customer: The Customer microservice Python
  #################################
  customer:
    build:
        context: ./
        dockerfile: customer.Dockerfile
    image: jialequek2020/customer:1.0
    depends_on:
      - project-mysql
    environment:
      DATABASE_HOST: project-mysql
      DATABASE_USER: user
      DATABASE_PASSWORD: user
      DATABASE_NAME: customers
      DATABASE_PORT: 3306
      dbURL: mysql+mysqlconnector://user:user@project-mysql:3306/customers
    ports:
      - 9292:5000
    networks:
      - proj-net
  #################################
  # Inventory: The Inventory microservice JAVA
  #################################
  inventory_webapp:
    image: maars505/springinventory:CORS_CRUD
    depends_on:
      - project-mysql
    environment:
      DATABASE_HOST: project-mysql
      DATABASE_USER: user
      DATABASE_PASSWORD: user
      DATABASE_NAME: inventory
      DATABASE_PORT: 3306
    mem_limit: 750m
    mem_reservation: 700m
    ports:
      - 9090:8080
    networks:
      - proj-net
  #################################
  # Cart: The Cart microservice JAVA
  #################################
  cart_webapp:
    #    image: pokemon:0.0.1-SNAPSHOT
    image: mon2020/cartapp:latest2
    depends_on:
      - project-mysql
    environment:
      - DATABASE_HOST=project-mysql
      - DATABASE_USER=user
      - DATABASE_PASSWORD=user
      - DATABASE_NAME=cart
      - DATABASE_PORT=3306
    mem_limit: 750m
    mem_reservation: 700m
    ports:
      - 9393:8080
    networks:
      - proj-net

# cd seller/prject
# docker compose up

# *** commands to test and see if database is inside docker *** #
  # docker exec -it project-project-mysql-1 bash -l
  # mysql -u root -p
  # show databases;
  #        - ./init/cart.sql:/docker-entrypoint-initdb.d/cart.sql
  #        - ./init/customers.sql:/docker-entrypoint-initdb.d/customers.sql