package com.example.inventory;

// public class MainController {
    
// }
// package com.example.accessingdatamysql;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import java.util.Optional;

@Controller // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MainController {
  @Autowired // This means to get the bean called userRepository
         // Which is auto-generated by Spring, we will use it to handle the data
  private ItemRepository userRepository;

//   @PostMapping(path="/add") // Map ONLY POST Requests
//   public @ResponseBody String addNewUser (
//       @RequestParam int ID,  @RequestParam String productName,
//         @RequestParam int quantity, @RequestParam int sellerId) {
//     // @ResponseBody means the returned String is the response, not a view name
//     // @RequestParam means it is a parameter from the GET or POST request

//     Item n = new Item(ID,productName,quantity, sellerId);
//     // n.setName(name);
//     // n.setEmail(email);
//     userRepository.save(n);
//     return "Saved";
//   }

//   @GetMapping(path="/all")
//   public @ResponseBody Iterable<User> getAllUsers() {
//     // This returns a JSON or XML with the users
//     return userRepository.findAll();
//   }

//@PostMapping(path="/update")
////   https://www.baeldung.com/spring-data-partial-update
//  public void updateCustomerContacts(@RequestParam int id, @RequestParam int newQuantity) {
//    Optional<Item> myCustomer = userRepository.findById(id);
//    try {
//    myCustomer.setQuantity(newQuantity);
//    userRepository.save(myCustomer);
//  }catch()
//
//}
}




// Notes:
// followed this guide for this controller for updating and deleting objects from database:
// https://spring.io/guides/gs/accessing-data-mysql/